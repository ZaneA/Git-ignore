#!/usr/bin/env ruby

# This script downloads .gitignore files from GitHub.

require 'json'
require 'open-uri'

# Require and explicitly enable Rainbow, as STDOUT is no longer a TTY when redirecting.
require 'rainbow'
Sickill::Rainbow.enabled = true

if ARGV.length == 0
  # Print usage.
  $stderr.puts 'Output .gitignore templates to STDOUT.'
  $stderr.puts 'Usage: git ignore <template> [template ...]'
  $stderr.flush

  begin
    # Fetch a list of supported templates from GitHub and print them.
    open('https://api.github.com/gitignore/templates') do |resp|
      templates = JSON::load(resp)

      puts 'Where <template> is one of:'
      puts templates.join(', ').color(:yellow)
    end
  rescue
    $stderr.puts 'Unable to fetch template list from GitHub. Sorry.'.color(:red)
  end

  exit 1
end

# Hold output in here.
output = ''

ARGV.each do |template|
  $stderr.puts "Fetching #{template} .gitignore template..".color(:yellow)

  begin
    # Fetch template from GitHub.
    open("https://api.github.com/gitignore/templates/#{template}") do |resp|
      template = JSON::load(resp)

      output << template['source']
    end
  rescue
    $stderr.puts "Unable to fetch #{template}.".color(:red)
  end
end

# Print the templates to STDOUT, user should redirect this to .gitignore file manually.
# This is so that the user can append to an existing .gitignore file.
$stdout.puts output

$stderr.puts 'Done.'.color(:green)
